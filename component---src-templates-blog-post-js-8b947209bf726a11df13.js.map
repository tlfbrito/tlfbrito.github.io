{"version":3,"sources":["webpack:///./i18n.js","webpack:///./src/templates/blog-post.js","webpack:///./src/utils/i18n.js"],"names":["exports","supportedLanguages","en","ru","tr","es","ko","sv","it","id","pl","ja","fr","hu","vi","th","my","sk","te","uk","bg","cs","de","nl","nb","fa","ar","sr","systemFont","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","get","pageContext","previous","next","slug","lang","fields","langKey","html","code","loadFontsForCode","enSlug","rawSlug","replace","targetLang","createLanguageLink","languageLink","discussUrl","encodeURIComponent","Layout","location","title","SEO","frontmatter","description","spoiler","style","color","scale","display","marginBottom","rhythm","marginTop","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","Panel","fontFamily","tags","map","tag","i","Fragment","key","to","className","length","href","target","rel","margin","boxShadow","textDecoration","Bio","flexWrap","justifyContent","listStyle","padding","marginRight","React","Component","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-8b947209bf726a11df13.js","sourcesContent":["// Please keep keys lowercase!\nexports.supportedLanguages = {\n  en: 'English',\n  ru: 'Русский',\n  tr: 'Türkçe',\n  es: 'Español',\n  ko: '한국어',\n  sv: 'Svenska',\n  it: 'Italiano',\n  id: 'Bahasa Indonesia',\n  'pt-br': 'Português do Brasil',\n  pl: 'Polski',\n  'zh-hant': '繁體中文',\n  'zh-hans': '简体中文',\n  ja: '日本語',\n  fr: 'Français',\n  hu: 'Magyar',\n  vi: 'Tiếng Việt',\n  th: 'ไทย',\n  my: 'မြန်မာဘာသာ',\n  sk: 'Slovenčina',\n  te: 'తెలుగు',\n  uk: 'Українська',\n  bg: 'Български',\n  cs: 'Čeština',\n  de: 'Deutsch',\n  nl: 'Nederlands',\n  nb: 'Norsk',\n  fa: 'فارسی',\n  ar: 'العربية',\n  sr: 'srpski',\n};\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Panel from '../components/Panel';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\nimport { createLanguageLink, loadFontsForCode } from '../utils/i18n';\n\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    let { previous, next, slug } = this.props.pageContext;\n    const lang = post.fields.langKey;\n\n    // Replace original links with translated when available.\n    let html = post.html;\n\n    loadFontsForCode(lang);\n    // TODO: this curried function is annoying\n    const languageLink = createLanguageLink(slug, lang);\n    const enSlug = languageLink('en');\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `https://tlfbrito.github.io${enSlug}`\n    )}`;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <main>\n          <article>\n            <header>\n              <h1 style={{ color: 'var(--textTitle)' }}>\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: 'block',\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date, lang)}\n                {` • ${formatReadingTime(post.timeToRead)}`}\n              </p>\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n            <Panel style={{ fontFamily: systemFont }}>\n              {post.fields.tags && (\n                <span>\n                  <span>Tags: </span>\n                  {post.fields.tags.map((tag, i) => (\n                    <React.Fragment key={tag}>\n                      <Link\n                        to={`/tags/${tag}`}\n                        className=\"badge badge-primary p-2 m-1\"\n                      >\n                        {tag}\n                      </Link>\n                      {i === post.fields.tags.length - 1 ? '' : ' • '}\n                    </React.Fragment>\n                  ))}\n                </span>\n              )}\n            </Panel>\n            <footer>\n              <p>\n                <a href={discussUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Discuss on Twitter\n                </a>\n              </p>\n            </footer>\n          </article>\n        </main>\n        <aside>\n          <div\n            style={{\n              margin: '90px 0 40px 0',\n              fontFamily: systemFont,\n            }}\n          ></div>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--pink)',\n              }}\n              to={'/'}\n            >\n              Blog\n            </Link>\n          </h3>\n          <Bio />\n          <nav>\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n      }\n      fields {\n        slug\n        langKey\n        tags\n      }\n    }\n  }\n`;\n","import { supportedLanguages } from './../../i18n';\n\n// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n\nexport const codeToLanguage = code =>\n  supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\n\nexport const loadFontsForCode = code => {\n  switch (code) {\n    case 'ru':\n    case 'bg':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      break;\n    case 'uk':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'cs':\n    case 'da':\n    case 'de':\n    case 'es':\n    case 'fi':\n    case 'fr':\n    case 'hu':\n    case 'it':\n    case 'nl':\n    case 'no':\n    case 'pl':\n    case 'pt-br':\n    case 'sk':\n    case 'sr':\n    case 'sq':\n    case 'sv':\n    case 'tr':\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'vi':\n      import('../fonts/fonts-shared.vietnamese.css');\n      import('../fonts/fonts-post.vietnamese.css');\n      break;\n    case 'fa':\n      import('../fonts/fonts-post.persian.css');\n      break;\n    case 'ar':\n      import('../fonts/fonts-post.arabic.css');\n      break;\n    default:\n      break;\n  }\n};\n\n// TODO: the curried signature is weird.\nexport const createLanguageLink = (slug, lang) => {\n  const rawSlug = slug.replace(`${lang}/`, '');\n\n  return targetLang =>\n    targetLang === 'en' ? rawSlug : `${targetLang}${rawSlug}`;\n};\n"],"sourceRoot":""}